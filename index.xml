<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>joker的博客</title>
    <link>http://jokerguo.top/</link>
    <description>Recent content on joker的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Mon, 18 Nov 2019 21:01:13 +0800</lastBuildDate>
    
	<atom:link href="http://jokerguo.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浅析URL</title>
      <link>http://jokerguo.top/posts/%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Mon, 18 Nov 2019 21:01:13 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/%E6%B5%85%E6%9E%90url/</guid>
      <description>URL 的组成  协议： http(80) / https(443) 域名或 ip：域名对应一个 ip 的字符串 ip 对应一个设备 最大值 255 端口号：一个服务对应一个端口号 （最大 6 万多） 路径：一串字符串 判断访问什么网页 查询参数：查看网页中的什么内容 锚点 ： 文档内部的定位 （锚点不会传入服务器）  DNS 的作用 DNS 服务的作用是将域名解析为 IP 地址 DNS 是域名系统 (Domain Name System) 的缩写，是因特网的一项核心服务，它作为可以将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的 IP 数串。这是 DNS 的官方说法。
在互联网中通过 IP 地址来进行通信。但是 IP 地址的表示形式是数字，很难进行记忆（比如 116.213.120.232），所以为每个 IP 取一个人类更易记忆的域名形式（比如 www.google.com），而通过 DNS 来把解析域名成为 IP（将方便人理解的命名格式解析成计算机能够理解的格式，也可以将 IP 翻译成域名）
DNS 过程
 客户端向 DNS 服务器（DNS 服务器有自己的 IP 地址）发送域名查询请求 DNS 服务器告知客户机 Web 服务器的 IP 地址  nslookup命令 nslookup 命令用于查询 DNS 的记录，查看域名解析是否正常</description>
    </item>
    
    <item>
      <title>Css总结</title>
      <link>http://jokerguo.top/posts/css%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 17 Nov 2019 16:03:53 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/css%E6%80%BB%E7%BB%93/</guid>
      <description>一、css 简介 CSS，全拼 Cascading Style Sheets，层叠样式表，是由 Tim Berners Lee 的同事赖先生（Håkon Wium Lie）首先提出的，目前使用最广泛的版本为 CSS2.1。最新版本为 css3.0
二、css 语法 三、文档流 inline 行内元素中不能嵌入块级元素
行内元素不能设置宽度
行内元素的高度由 line-height 间接决定(如果内容字体不一致 可能行高会有所改变)
block 块级元素可以设置 width 默认宽度为 auto 不是 100%
块级元素中可以嵌入行内或者块级元素
inline-block 行内块元素结合两者 可使用 width
Tips: HTML5 中没有行内元素 块级元素的区分 所有元素指定 display suggest: 不要使用 width:100% 四、脱离文档流 position: absolute 绝对定位 / fixed 固定定位
float 浮动
五、overflow  auto 是灵活设置，超出时有滚动条，不超出时没有 scroll 一直显示滚动条 hidden 直接隐藏溢出部分 visible 直接显示溢出部分  六、盒模型 css 盒模型分两种 一种 content-box 一种 border-box</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://jokerguo.top/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Fri, 08 Nov 2019 16:17:02 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>《HTML 常用标签》 a 标签 href &amp;nbsp;&amp;nbsp; 超链接 填入相应的链接地址 1.&amp;nbsp;&amp;nbsp;网址 &amp;nbsp;&amp;nbsp; 推荐使用这种格式（//google.com）因为会自动选择协议，跳转到正确页面，减少 bug。
2.&amp;nbsp;&amp;nbsp;绝对路径于相对路径
注:在哪里开启的 http 服务 哪里就是根目录
3.&amp;nbsp;&amp;nbsp;伪协议
javascript:代码; &amp;nbsp;&amp;nbsp; （可实现无任何操作的 a 标签 不加代码）
mailto:&amp;nbsp;&amp;nbsp;发邮件
tel:&amp;nbsp;&amp;nbsp;打电话
4.&amp;nbsp;&amp;nbsp;#id&amp;nbsp;&amp;nbsp; 定位到页面中的 id 位置
target  _blank &amp;nbsp;&amp;nbsp; 新建窗口打开 _top &amp;nbsp;&amp;nbsp; 级别最高的窗口打开 _parent &amp;nbsp;&amp;nbsp; 父级窗口打开 _self &amp;nbsp;&amp;nbsp; 默认值 &amp;nbsp;&amp;nbsp; 当前窗口打开 target=&amp;ldquo;xxx&amp;rdquo; 创建一个 xxx 窗口 会覆盖之前的窗口 iframe name=&amp;ldquo;xxx&amp;rdquo; 用 name 为 xxx 的 iframe 窗口打开  download 下载页面&amp;nbsp;&amp;nbsp;部分浏览器不支持
rel=noopener 现在还不清楚具体用处
总结 a 标签的作用：跳转外部页面，内部锚点，邮箱和电话
MDN a 标签</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://jokerguo.top/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Fri, 08 Nov 2019 09:49:08 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description> HTML入门笔记1 HTML是谁发明的 1991年由Tim Berners-Lee提出
HTML的起手式 !  注：!会自动补齐代码
常用的表章节标签  h1-h6 标题 section 章节 article 文章 p 段落 header 头部 footer 脚部 main 主要内容 aside 旁支内容 div 划分  全局属性  class 定义一个类 contenteditable 内容可修改 hidden 不可见
 id 尽量不使用id style 样式 tabindex 使用Tab键选中 -1（不选中） 0（最后一个选中） 正数（按大小选中 ） title 标题  常用内容标签  ol+li 有序列表 ul+li 无序列表 dl+dt+dd 自定义列表 pre code 通常一起使用 中间代码 hr 水平线 br 换行 a 超链接 em 语气强调 strong 内容重要 quote 表示内联引用 blockquote 表示块级引用 cite属性值：url  </description>
    </item>
    
    <item>
      <title>如何搭建博客</title>
      <link>http://jokerguo.top/posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 07 Nov 2019 14:42:00 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>使用 hugo 搭建一个个人博客 首先进入 Hugo 官网按提示操作
第一步 安装 Hugo
第二步 执行该命令行
hugo new site jokerguo.github.io-creator  第三步 执行下列命令行
git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml  第四步 新建一篇博客
hugo new posts/开通博客啦.md  注意点: 将博客中 draft 的值修改为 false
第五步 hugo server -D  第六步 找到配置文件 config.toml
 将语言修改为&amp;rdquo;zh-Hans&amp;rdquo; 标题改为自己的博客名 主题看个人喜好更改  第七步 hugo -D  最终会生成 public 文件
 creator 目录下添加.gitignore 文件 写入/public/ 进入 public 创建本地仓库 在 GitHub 上创建 repo 仓库名：自己用户名.</description>
    </item>
    
    <item>
      <title>我的第一篇博客</title>
      <link>http://jokerguo.top/posts/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 07 Nov 2019 14:22:01 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</guid>
      <description>下面是我的女朋友</description>
    </item>
    
    <item>
      <title>开通博客</title>
      <link>http://jokerguo.top/posts/%E5%BC%80%E9%80%9A%E5%8D%9A%E5%AE%A2%E5%95%A6/</link>
      <pubDate>Tue, 05 Nov 2019 17:17:13 +0800</pubDate>
      
      <guid>http://jokerguo.top/posts/%E5%BC%80%E9%80%9A%E5%8D%9A%E5%AE%A2%E5%95%A6/</guid>
      <description>开通啦 这是一条公告 哈哈哈</description>
    </item>
    
  </channel>
</rss>